library(ape)
set.seed(1)
tree <- rtree(4)
names(tree)
tree$edge
tree$tip.label
tree$Nnode
tree$edge.length

data <- c("G", "C", "A", "A")
tree$tip.label <- data
plot(tree)
nodelabels()

tips <- 1:4
edge.tips <- is.element(tree$edge[,2], tips) 
parents <- tree$edge[edge.tips, 1] 
p.tips1 <- parents[duplicated(parents)] 
edge.tips2 <- is.element(tree$edge[,2], p.tips1) 
p.tips2 <- tree$edge[edge.tips2, 1] 
edge.tips3 <- is.element(tree$edge[,2], p.tips2) 
p.tips3 <- tree$edge[edge.tips3, 1] 

# sankoff 
cost.matrix <- matrix(c(0, 2.5, 1, 2.5,
                        2.5, 0, 2.5, 1,
                        1, 2.5, 0, 2.5,
                        2.5, 1, 2.5, 0),
                      nrow=4,
                      byrow=TRUE)

p.tips1_score = c(cost.matrix[1,2]+cost.matrix[1,3],0+cost.matrix[2,3],0+cost.matrix[2,3],cost.matrix[4,2]+cost.matrix[4,3])
p.tips2_score= c(cost.matrix[1,3]+min(p.score1), cost.matrix[2,3]+min(p.score1),0+min(p.score1),cost.matrix[4,3]+min(p.score1))
p.tips3_score= c(0+min(p.score2),cost.matrix[1,2]+min(p.score2),cost.matrix[1,3]+min(p.score2),cost.matrix[4,1]+min(p.score2))
p.tips1_score 
p.tips2_score
p.tips3_score


#Fitch
a = intersect(tree$tip.label[2],tree$tip.label[3])
b = union(tree$tip.label[2],tree$tip.label[3])
if (length(a)!= 0){
  p.tips1_f=a
} else {
  p.tips1_f=b
}
p.tips1_f


c = intersect(p.tips1_f,tree$tip.label[3])
d = union(p.tips1_f,tree$tip.label[3])
if (length(c)!= 0){
  p.tips2_f=c
} else {
  p.tips2_f=d
}
p.tips2_f

e = intersect(p.tips2_f,tree$tip.label[1])
f = union(p.tips2_f,tree$tip.label[1])
if (length(e)!= 0){
  p.tips3_f=e
} else {
  p.tips3_f=f
}
p.tips3_f
